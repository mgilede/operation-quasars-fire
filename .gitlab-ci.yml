image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay

stages:
  - staging
  - production

staging:
  stage: staging
  script:
    - docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/$HEROKU_APP_STAGING/my-app .
    - docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
    - docker push registry.heroku.com/$HEROKU_APP_STAGING/my-app
    - apk add --no-cache curl
    - echo "Docker Image ID is $(cat imageid.txt)"
    - |-
      curl -X PATCH https://api.heroku.com/apps/$HEROKU_APP_STAGING/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_API_KEY}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  only:
    - staging

production:
  stage: production
  script:
    - docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/$HEROKU_APP_PRODUCTION/my-app .
    - docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
    - docker push registry.heroku.com/$HEROKU_APP_PRODUCTION/my-app
    - apk add --no-cache curl
    - echo "Docker Image ID is $(cat imageid.txt)"
    - |-
      curl -X PATCH https://api.heroku.com/apps/$HEROKU_APP_PRODUCTION/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_API_KEY}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  only:
    - main
